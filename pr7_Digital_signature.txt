from Crypto.Hash import SHA256
from Crypto.PublicKey import RSA
from Crypto.Signature import pkcs1_15

#Generate RSA key pair
key= RSA.generate(2048)
priv_key = key.export_key()
pub_key = key.publickey().export_key()

#Simulated document content
orignal_msg = b"This is original document content."
modified_msg = b"This is modified document content."

#Hash the document content
orignal_hash = SHA256.new(orignal_msg)
modified_hash = SHA256.new(modified_msg)

#create a signature using the private key
signature = pkcs1_15.new(RSA.import_key(priv_key)).sign(orignal_hash)

#Verify the signature using the public key with the modified content
try:
    pkcs1_15.new(RSA.import_key(pub_key)).verify(modified_hash, signature)
    print("Valid Signature")
except (ValueError, TypeError):
    print("Invalid Signature")


"""
    OUTPUT:-
    Invalid Signature (if the document is modified)

    OR 
    
    OUTPUT:-
    Valid Signature (if the document is not modified)
"""